# =============================================================================
# CURRICULUM GENERATOR APP - ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains all environment variables needed for the backend API.
# Copy this file to .env and update with your actual values.
#
# For Render deployment, set these variables in the Render dashboard.
# For local development, use local MongoDB and Redis instances.
# =============================================================================

# -----------------------------------------------------------------------------
# Server Configuration
# -----------------------------------------------------------------------------
PORT=4000
NODE_ENV=development

# -----------------------------------------------------------------------------
# Database - MongoDB
# -----------------------------------------------------------------------------
# For local development (requires local MongoDB installation):
MONGODB_URI=mongodb://localhost:27017/curriculum_db

# For MongoDB Atlas (Production/Staging - M10+ cluster required for vector search):
# MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/curriculum_db?retryWrites=true&w=majority
# 
# IMPORTANT: URL-encode special characters in password:
#   @ → %40
#   : → %3A
#   / → %2F
#   ? → %3F
#   # → %23
#
# Example: If password is "P@ss:word#123", use "P%40ss%3Aword%23123"

# -----------------------------------------------------------------------------
# Redis - Caching and Job Queue
# -----------------------------------------------------------------------------
# For local development:
REDIS_URL=redis://localhost:6379

# For Render Redis (Production):
# REDIS_URL is automatically provided by Render Redis add-on
# Format: rediss://red-xxxxx:6379 (note the 'rediss://' with TLS)

# Redis Configuration
REDIS_TLS=false  # Auto-enabled in production for Render Redis
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=1000  # milliseconds

# -----------------------------------------------------------------------------
# OpenAI - AI Services
# -----------------------------------------------------------------------------
# Required: Get your API key from https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here

# Model Configuration (defaults shown, can be customized)
OPENAI_EMBEDDING_MODEL=text-embedding-3-large  # 1536 dimensions
OPENAI_CHAT_MODEL=gpt-4-turbo

# -----------------------------------------------------------------------------
# File Storage - Render Persistent Disk
# -----------------------------------------------------------------------------
# Storage type: render_disk (production), local (development), cloudinary (alternative)
STORAGE_TYPE=local

# Upload directory
# Production (Render): /app/uploads (mounted persistent disk)
# Development: ./uploads (local directory)
UPLOAD_DIR=./uploads

# Maximum file size in bytes (default: 50MB)
MAX_FILE_SIZE=52428800

# -----------------------------------------------------------------------------
# Authentication - Auth0
# -----------------------------------------------------------------------------
# Required: Configure in Auth0 dashboard (https://manage.auth0.com)
AUTH0_DOMAIN=your-auth0-domain.auth0.com
AUTH0_AUDIENCE=your-api-audience

# Session timeout in seconds (default: 30 minutes)
SESSION_TIMEOUT_SECONDS=1800

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------
# CRITICAL: Change these in production! Must be secure random strings.
# Generate with: openssl rand -base64 32
ENCRYPTION_KEY=your-32-character-encryption-key-change-in-production
API_SIGNING_SECRET=your-api-signing-secret-change-in-production

# CORS allowed origins (comma-separated)
# Development: http://localhost:3000
# Production: https://your-frontend.onrender.com
CORS_ORIGINS=http://localhost:3000

# Rate limiting configuration
RATE_LIMIT_WINDOW_MS=60000  # 1 minute window
RATE_LIMIT_MAX_REQUESTS=100  # requests per window per user

# HTTPS configuration (auto-enabled on Render)
ENABLE_HTTPS=false

# -----------------------------------------------------------------------------
# Monitoring and Logging
# -----------------------------------------------------------------------------
# Sentry for error tracking (optional but recommended for production)
# Get DSN from: https://sentry.io
SENTRY_DSN=

# Logging level: debug, info, warn, error
LOG_LEVEL=info

# Application version (for tracking)
APP_VERSION=1.0.0

# -----------------------------------------------------------------------------
# Alert Thresholds
# -----------------------------------------------------------------------------
# Configure monitoring alert thresholds
ALERT_ERROR_RATE=10  # errors per minute
ALERT_RESPONSE_TIME=3000  # milliseconds
ALERT_FAILURE_RATE=20  # percentage of failed curriculum generations
ALERT_LLM_COST=100  # dollars per hour for OpenAI API usage

# =============================================================================
# RENDER DEPLOYMENT NOTES
# =============================================================================
# 
# When deploying to Render:
# 1. Set all variables in Render dashboard (Settings → Environment)
# 2. MONGODB_URI: Use MongoDB Atlas connection string (M10+ cluster)
# 3. REDIS_URL: Automatically provided by Render Redis add-on
# 4. UPLOAD_DIR: Set to /app/uploads (persistent disk mount point)
# 5. STORAGE_TYPE: Set to render_disk
# 6. NODE_ENV: Set to production
# 7. CORS_ORIGINS: Set to your frontend URL on Render
# 8. Generate secure values for ENCRYPTION_KEY and API_SIGNING_SECRET
# 9. Configure Auth0 with your Render API URL
# 10. Add Sentry DSN for error tracking
#
# =============================================================================
